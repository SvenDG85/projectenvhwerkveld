- hosts: servers
  become: yes
  gather_facts: yes
  vars:
    acme_challenge_type: http-01
    acme_directory: https://acme-v02.api.letsencrypt.org/directory
    acme_version: 2
    acme_email: sven.degroodt@gmail.com
    letsencrypt_dir: /etc/letsencrypt
    letsencrypt_keys_dir: /etc/letsencrypt/keys
    letsencrypt_csrs_dir: /etc/letsencrypt/csrs
    letsencrypt_certs_dir: /etc/letsencrypt/certs
    letsencrypt_pem_dir: /etc/letsencrypt/live/
    letsencrypt_account_key: /etc/letsencrypt/account/account.key
    domain_name: toys.kingarthur-princessolivia.eu
    webroot_dir: "/var/www/html/wordpress"
  
  tasks:

    - name: "Install Certbot for Apache (Debian/Ubuntu)"
      ansible.builtin.apt:
        name: 
          - certbot
          - python3-certbot-apache
        state: present

    - name: "Create required directories in /etc/letsencrypt"
      file:
        path: "/etc/letsencrypt/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: u=rwx,g=x,o=x
      with_items:
      - account
      - certs
      - csrs
      - keys
    
    - name: "Generate a Let's Encrypt account key"
      shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"
    
    - name: "Generate Let's Encrypt private key"
      shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"

    - name: "Generate Let's Encrypt CSR"
      shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ domain_name }},DNS:www.{{ domain_name }}\")) | sudo tee /etc/letsencrypt/csrs/{{ domain_name }}.csr"
      args:
        executable: /bin/bash
    
    - name: "Obtain a Let's Encrypt certificate using the webroot plugin"
      ansible.builtin.shell: >
        certbot certonly --webroot -w {{ webroot_dir }} -d {{ domain_name }}
        --agree-tos --email {{ acme_email }} --non-interactive --keep
      args:
        creates: "/etc/letsencrypt/{{ domain_name }}/fullchain.pem"

    - name: Update the package list
      ansible.builtin.apt:
        update_cache: yes   
        cache_valid_time: 3600 # Updates the cache if it's older than 1 hour

    - name: Enable Apache SSL module
      ansible.builtin.shell:
        cmd: "a2enmod ssl"
    
    - name: "Ensure Apache is running and enabled"
      service:
        name: apache2
        state: started
        enabled: true
      when: ansible_os_family == "Debian"

    - name: "Configure Apache to use SSL certificates"
      blockinfile:
        path: "/etc/apache2/sites-available/{{ domain_name }}-ssl.conf"
        block: |
          <VirtualHost *:443>
              ServerName {{ domain_name }}
              ServerAlias www.{{ domain_name }}
              DocumentRoot /var/www/html/wordpress
              SSLEngine on
              SSLCertificateFile {{ letsencrypt_pem_dir }}/{{ domain_name }}/fullchain.pem
              SSLCertificateKeyFile {{ letsencrypt_pem_dir }}/{{ domain_name }}/privkey.pem
          </VirtualHost>
        create: yes
      when: ansible_os_family == "Debian" 
    
    - name: "Configure Apache HTTP to HTTPS redirect"
      blockinfile:
        path: "/etc/apache2/sites-available/{{ domain_name }}.conf"
        block: |
          <VirtualHost *:80>
              ServerName {{ domain_name }}
              ServerAlias www.{{ domain_name }}
              Redirect permanent / https://{{ domain_name }}/
          </VirtualHost>
        create: yes
      when: ansible_os_family == "Debian"

    - name: "Enable the HTTP site (Debian/Ubuntu)"
      shell: a2ensite {{ domain_name }}.conf
      when: ansible_os_family == "Debian"


    - name: "Enable the SSL site (Debian/Ubuntu)"
      shell: a2ensite {{ domain_name }}-ssl.conf
      when: ansible_os_family == "Debian"

    - name: Reload Apache to apply changes
      ansible.builtin.service:
        name: apache2
        state: reloaded